<UserControl x:Class="Rythm.Client.View.DisplayingEventsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:Rythm.Client.ViewModel;assembly=Rythm.Client.ViewModel"
             mc:Ignorable="d" 
             xmlns:interactivity="http://prismlibrary.com/"
             interactivity:ViewModelLocator.AutoWireViewModel="True" 
             d:DataContext="{d:DesignInstance viewModel:DisplayingEventsViewModel}">
    <Grid Background="AliceBlue">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="200"/>
		</Grid.ColumnDefinitions>

		<DataGrid Grid.Column="0" AutoGenerateColumns="False" ItemsSource="{Binding DataBaseVisibleOwnMessagesList}">
			<DataGrid.Style>
				<Style TargetType="DataGrid">
					<Style.Triggers>
						<DataTrigger Binding="{Binding DataGridMessagesVisibility}" Value="True">
							<Setter Property="Visibility" Value="Visible"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding DataGridMessagesVisibility}" Value="False">
							<Setter Property="Visibility" Value="Hidden"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.Style>
			<DataGrid.Columns>
			    <DataGridTextColumn Header="Message" Binding="{Binding Text}" />
			    <DataGridTextColumn Header="Date" Binding="{Binding Date}" />
			    <DataGridTextColumn Header="From" Binding="{Binding ClientFrom}" />
			    <DataGridTextColumn Header="To" Binding="{Binding ClientTo}" />
		    </DataGrid.Columns>
	    </DataGrid>
		
		<DataGrid Grid.Column="0" AutoGenerateColumns="False" ItemsSource="{Binding DataBaseVisibleEventsList}">
			<DataGrid.Style>
				<Style TargetType="DataGrid">
					<Style.Triggers>
						<DataTrigger Binding="{Binding DataGridEventsVisibility}" Value="True">
							<Setter Property="Visibility" Value="Visible"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding DataGridEventsVisibility}" Value="False">
							<Setter Property="Visibility" Value="Hidden"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.Style>
			<DataGrid.Columns>
				<DataGridTextColumn Header="Event" Binding="{Binding EventMessage}" />
				<DataGridTextColumn Header="Date" Binding="{Binding EventDate}" />
		    </DataGrid.Columns>
	    </DataGrid>

		<Grid Grid.Column="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.25*"/>
				<ColumnDefinition Width="0.25*"/>
				<ColumnDefinition Width="0.25*"/>
				<ColumnDefinition Width="0.25*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="0.05*"/>
				<RowDefinition Height="0.1*"/>
				<RowDefinition Height="0.05*"/>
				<RowDefinition Height="0.05*"/>
				<RowDefinition Height="*"/>

			</Grid.RowDefinitions>

			<TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Text="From(day)" Margin="10 0 0 0"/>
			<DatePicker Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" SelectedDate="{Binding DayFrom}"/>
			<TextBlock Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="0" Text="To(day)" Margin="10 0 0 0"/>
			<DatePicker Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1" SelectedDate="{Binding DayTo}"/>
			<TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Text="From(hour)" Margin="10 0 0 0"/>
			<TextBlock Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="2" Text="To(hour)" Margin="10 0 0 0"/>
			<TextBox Grid.Column="0" Grid.Row="3" Text="{Binding HourFrom}" Margin="2 0" ></TextBox>
			<TextBox Grid.Column="1" Grid.Row="3" Text="{Binding MinuteFrom}" Margin="2 0"></TextBox>
			<TextBox Grid.Column="2"  Grid.Row="3"  Text="{Binding HourTo}" Margin="2 0"></TextBox>
			<TextBox Grid.Column="3" Grid.Row="3" Text="{Binding MinuteTo}" Margin="2 0"></TextBox>
			<Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource BlackAndWhiteButton}" Content="Reset" HorizontalContentAlignment="Center" Margin="0 10" Command="{Binding ResetCommand}"></Button>
			<Button Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource BlackAndWhiteButton}" Content="Select" HorizontalContentAlignment="Center" Margin="0 10" Command="{Binding SelectCommand}"></Button>
		</Grid>
    </Grid>

</UserControl>
